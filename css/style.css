@charset "UTF-8";
/* "Sass extends CSS’s @import rule with the ability to import Sass and CSS stylesheets, providing access to mixins, functions, and variables and combining multiple stylesheets’ CSS together. Unlike plain CSS imports, which require the browser to make multiple HTTP requests as it renders your page, Sass imports are handled entirely during compilation.(At Rules: @import*)."*/
.box {
  max-width: 1100px;
  padding: 0 30px;
  margin: 0 auto;
  overflow: auto;
}

.btn-secondary, .btn-primary {
  display: inline-block;
  border-radius: 5px;
  padding: 8px 20px;
  margin: 3px;
}
.btn-secondary:hover, .btn-primary:hover {
  transform: scale(0.8);
}

.btn-primary {
  background-color: #001c47;
  color: white;
}

.btn-secondary {
  background-color: #a2d0fc;
  color: black;
}

.box {
  max-width: 1100px;
  padding: 0 30px;
  margin: 0 auto;
  overflow: auto;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  background-color: #FFC300;
  font-family: Trebuchet MS, Arial, sans-serif;
  line-height: 1;
}

img {
  border-radius: 50%;
}

a {
  text-decoration: none;
}

.hero {
  background-color: #000814;
  color: white;
  /* 
  @include rule deviated from SCSS mixin from _utilities.scss as "Mixins allow you to define styles that can be re-used throughout your stylesheet(At Rules: @mixin and @include*)." $primary-color derived from _config.scss. 
  */
  height: 600px;
}
.hero nav {
  display: flex; /*flexbox utilization. Allows children(ul and "banner" h1 class to be in line. Possibly defaulted to row because of "hero-banner" content. Centered alignemnt and not extended to end of page due to restriction of container "box" as its width is limited to 1100px in style.css. "The flexible box layout module, usually referred to as flexbox, was designed as a one-dimensional layout model, and as a method that could offer space distribution between items in an interface and powerful alignment capabilities...describ[ed] flexbox as being one-dimensional we are describing the fact that flexbox deals with layout in one dimension at a time — either as a row or as a column."*  */
  align-items: center;
  justify-content: space-between;
}
.hero nav ul {
  display: flex;
  list-style-type: none;
}
.hero nav li {
  padding: 15px;
}
.hero nav a {
  color: white;
}
.hero nav a:hover {
  color: #a2d0fc;
}
.hero-content {
  height: 100%;
  display: flex;
  align-items: center;
  margin-top: 30px;
}
.hero-content img {
  width: 50%;
}
.hero-content h1 {
  font-size: 50px;
  line-height: 1.2;
}

.m-1 {
  margin: 1rem;
}

.my-1 {
  margin: 1rem 0;
}

.p-1 {
  padding: 1rem;
}

.py-1 {
  padding: 1rem 0;
}

.m-2 {
  margin: 2rem;
}

.my-2 {
  margin: 2rem 0;
}

.p-2 {
  padding: 2rem;
}

.py-2 {
  padding: 2rem 0;
}

.m-3 {
  margin: 3rem;
}

.my-3 {
  margin: 3rem 0;
}

.p-3 {
  padding: 3rem;
}

.py-3 {
  padding: 3rem 0;
}

.m-4 {
  margin: 4rem;
}

.my-4 {
  margin: 4rem 0;
}

.p-4 {
  padding: 4rem;
}

.py-4 {
  padding: 4rem 0;
}

.m-5 {
  margin: 5rem;
}

.my-5 {
  margin: 5rem 0;
}

.p-5 {
  padding: 5rem;
}

.py-5 {
  padding: 5rem 0;
}

/*# sourceMappingURL=style.css.map */
